<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.analysisplatform.dao.SchoolMapper">
  <resultMap id="BaseResultMap" type="com.analysisplatform.model.School">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="origin_id" jdbcType="VARCHAR" property="originId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="administrative_division" jdbcType="VARCHAR" property="administrativeDivision"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
    <result column="principle" jdbcType="VARCHAR" property="principle"/>
    <result column="is_public" jdbcType="VARCHAR" property="isPublic"/>
    <result column="education_range" jdbcType="INTEGER" property="educationRange"/>
  </resultMap>
  <!--    为了保证代码重用性，所以存在，但是不用-->
  <select id="findAllOriginIdBySchoolId" resultType="java.lang.String" parameterType="java.lang.String"></select>
  <update id="updateByOriginIdAndSchoolId" parameterType="com.analysisplatform.model.Score"></update>


  <select id="findByUsername" resultMap="BaseResultMap" parameterType="String">
        select * from school where username=#{username}
  </select>

  <select id="findAllOriginIdBySchoolName" resultType="java.lang.String" parameterType="java.lang.String">
        select origin_id from school where origin_school_id=#{name}
  </select>
<!--完成-->
  <update id="updateByOriginIdAndSchoolName" parameterType="com.analysisplatform.model.School">
    update school
    <set>
      name=#{name},
      username=#{username},
      password=#{password},
      administrative_division=#{administrativeDivision},
      address=#{address},
      principle=#{principle},
      is_public=#{isPublic},
      education_range=#{educationRange}
    </set>
    where origin_id=#{originId} and name=#{name}
  </update>
  <insert id="insertNoRepeat" parameterType="list">
    INSERT INTO school
    (origin_id,name,username,password,administrative_division,address,principle,is_public,education_range)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.originId},#{item.name},#{item.username},#{item.password},#{item.administrativeDivision},
      #{item.address},#{item.principle},#{item.isPublic},#{item.educationRange})
    </foreach>
    ON DUPLICATE KEY UPDATE
    name=VALUES(name),
    username=VALUES(username),
    password=VALUES(password),
    administrative_division=VALUES(administrative_division),
    address=VALUES(address),
    principle=VALUES(principle),
    is_public=VALUES(is_public),
    education_range=VALUES(education_range)
  </insert>
</mapper>