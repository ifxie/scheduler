<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.analysisplatform.dao.AttendanceMapper">
  <resultMap id="BaseResultMap" type="com.analysisplatform.model.Attendance">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="origin_id" jdbcType="VARCHAR" property="originId" />
    <result column="origin_student_id" jdbcType="VARCHAR" property="originStudentId" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="in_status" jdbcType="INTEGER" property="inStatus" />
    <result column="out_status" jdbcType="INTEGER" property="outStatus" />
    <result column="origin_school_id" jdbcType="VARCHAR" property="originSchoolId" />
    <result column="origin_campus_id" jdbcType="VARCHAR" property="originCampusId" />
    <result column="late_minute" jdbcType="INTEGER" property="lateMinute" />
    <result column="early_minute" jdbcType="INTEGER" property="earlyMinute" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
    <result column="in_attend_time" jdbcType="TIMESTAMP" property="inAttendTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="out_attend_time" jdbcType="TIMESTAMP" property="outAttendTime" />
    <result column="is_rest" jdbcType="BIT" property="isRest" />
    <result column="in_remark" jdbcType="LONGVARCHAR" property="inRemark" />
    <result column="out_remark" jdbcType="LONGVARCHAR" property="outRemark" />
  </resultMap>

  <select id="findAllOriginIdBySchoolId" resultType="java.lang.String" parameterType="java.lang.String">
        select origin_id from attendance where origin_school_id=#{schoolId}
  </select>
<!--  完成:废弃-->
  <update id="updateByOriginIdAndSchoolId" parameterType="com.analysisplatform.model.Attendance">
    update attendance
    <set>
      origin_student_id=#{originStudentId},
      date=#{date},
      in_status=#{inStatus},
      out_status=#{outStatus},
      origin_campus_id=#{originCampusId},
      late_minute=#{lateMinute},
      early_minute=#{earlyMinute},
      in_time=#{inTime},
      in_attend_time=#{inAttendTime},
      out_time=#{outTime},
      out_attend_time=#{outAttendTime},
      is_rest=#{isRest},
      in_remark=#{inRemark},
      out_remark=#{outRemark}
    </set>
    where origin_id=#{originId} and origin_school_id=#{originSchoolId}
  </update>

  <insert id="insertNoRepeat" parameterType="list">
        INSERT INTO attendance
        (origin_id,origin_student_id,date,in_status,out_status,origin_school_id,
        origin_campus_id,late_minute,early_minute,in_time,in_attend_time,out_time,
        out_attend_time,is_rest,in_remark,out_remark) VALUES
    <foreach collection="list" item="item" index="index" separator=",">
        (#{item.originId},#{item.originStudentId},#{item.date},#{item.inStatus},#{item.outStatus},#{item.originSchoolId},
      #{item.originCampusId},#{item.lateMinute},#{item.earlyMinute},#{item.inTime},#{item.inAttendTime},#{item.outTime},
      #{item.outAttendTime},#{item.isRest},#{item.inRemark},#{item.outRemark})
    </foreach>
    ON DUPLICATE KEY UPDATE
    origin_student_id=VALUES(origin_student_id) ,
    date=VALUES(date),
    in_status=VALUES(in_status),
    out_status=VALUES(out_status),
    late_minute=VALUES(late_minute),
    early_minute=VALUES(early_minute),
    in_time=VALUES(in_time),
    in_attend_time=VALUES(in_attend_time),
    out_time=VALUES(out_time),
    out_attend_time=VALUES(out_attend_time),
    is_rest=VALUES(is_rest),
    in_remark=VALUES(in_remark),
    out_remark=VALUES(out_remark)
  </insert>
</mapper>