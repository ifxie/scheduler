<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.analysisplatform.dao.TestMapper">
  <resultMap id="BaseResultMap" type="com.analysisplatform.model.Test">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="origin_id" jdbcType="VARCHAR" property="originId" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="origin_exam_id" jdbcType="VARCHAR" property="originExamId" />
    <result column="origin_term_id" jdbcType="VARCHAR" property="originTermId" />
    <result column="origin_subject_id" jdbcType="VARCHAR" property="originSubjectId" />
    <result column="origin_class_id" jdbcType="VARCHAR" property="originClassId" />
    <result column="origin_grade_id" jdbcType="VARCHAR" property="originGradeId" />
    <result column="full_score" jdbcType="INTEGER" property="fullScore" />
    <result column="origin_school_id" jdbcType="VARCHAR" property="originSchoolId" />
    <result column="origin_campus_id" jdbcType="VARCHAR" property="originCampusId" />
  </resultMap>

  <select id="findAllOriginIdBySchoolId" resultType="java.lang.String" parameterType="java.lang.String">
        select origin_id from teacher where origin_school_id=#{schoolId}
  </select>
<!--完成-->
  <update id="updateByOriginIdAndSchoolId" parameterType="com.analysisplatform.model.Teacher">
    update teacher
    <set>
      date=#{date},
      origin_exam_id=#{originExamId},
      origin_term_id=#{originTermId},
      origin_subject_id=#{originSubjectId},
      origin_class_id=#{originClassId},
      origin_grade_id=#{originGradeId},
      full_score=#{fullScore},
      origin_campus_id=#{originCampusId}
    </set>
    where origin_id=#{originId} and origin_school_id=#{originSchoolId}
  </update>

  <insert id="insertNoRepeat" parameterType="list">
    INSERT INTO test
    (origin_id,date,origin_exam_id,origin_term_id,origin_subject_id,origin_class_id,origin_grade_id,
    full_score,origin_school_id,origin_campus_id) VALUES
    <foreach collection="list" item="item" index="index" separator=",">
        (#{item.originId},#{item.date},#{item.originExamId},#{item.originTermId},#{item.originSubjectId},
        #{item.originClassId},#{item.originGradeId},#{item.fullScore},#{item.originSchoolId},#{item.originCampusId})
    </foreach>
    ON DUPLICATE KEY UPDATE
    date=VALUES(date),
    origin_exam_id=VALUES(origin_exam_id),
    origin_term_id=VALUES(origin_term_id),
    origin_subject_id=VALUES(origin_subject_id),
    origin_class_id=VALUES(origin_class_id),
    origin_grade_id=VALUES(origin_grade_id),
    full_score=VALUES(full_score)
  </insert>
</mapper>